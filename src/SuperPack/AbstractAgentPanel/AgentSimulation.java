package SuperPack.AbstractAgentPanel;import PsoPanel.PsoSimulation;import SuperPack.Panel.SimulationPanel;import java.awt.*;/** * Created by Ishiwatari on 2016/10/25. */abstract public class AgentSimulation extends SimulationPanel {    public AgentList multi; //エージェントのリスト    public int agentNum;            //エージェントの最大数    @Override    public void step() {        count++;        //ロボットを動かす        for (int i = 0; i < robotsNum; i++) {            robot[i].move();        }        //エージェントを動かす        multi.agentsMove(robot);        //重複しているロボットの削除        for (int i = 0; i < robotsNum; i++) {            multi.deleteOverlapAgent((AgentRobot) (robot[i]));        }        //ターゲットの削除        deleteCaptureTarget();    }    /**     * デバック用の描写     *     * @param g2     */    protected void debugPaint(Graphics2D g2) {        for (int i = 0; i < robotsNum; i++) {            if (robot[i].id == debugMode) {                robot[i].paint(g2);                int ciSwingX = (int) (robot[i].CI.x * PsoSimulation.length / PsoSimulation.size + SimulationPanel.startX);                int ciSwingY = (int) ((PsoSimulation.size - robot[i].CI.y) * PsoSimulation.length / PsoSimulation.size + SimulationPanel.startY);                g2.setColor(Color.GREEN);                g2.fillOval(ciSwingX - 3, ciSwingY - 3, 6, 6);                int piSwingX = (int) (robot[i].PI.x * PsoSimulation.length / PsoSimulation.size + SimulationPanel.startX);                int piSwingY = (int) ((PsoSimulation.size - robot[i].PI.y) * PsoSimulation.length / PsoSimulation.size + SimulationPanel.startY);                g2.setColor(Color.YELLOW);                g2.fillOval(piSwingX - 3, piSwingY - 3, 6, 6);                break;            }        }    }}