package SuperPack;import java.util.ArrayList;/** * PI,CI,AIのためのクラス * Created by Ishiwatari on 2016/05/02. */public class Intelligence {    public double x;    public double y;    private double fitnessValue;    public Intelligence(double x, double y, ArrayList<Enemy> tList) {        this.x = x;        this.y = y;        this.fitnessValue = fitnessFunction(tList);    }    public Intelligence(double x, double y) {        this.x = x;        this.y = y;        this.fitnessValue = Double.MAX_VALUE;    }    public Intelligence(Intelligence i) {        x = i.x;        y = i.y;        this.fitnessValue = i.getFitnessValue();    }    public double getFitnessValue() {        return fitnessValue;    }    /**     * 一番近いターゲットからの距離を得るメソッド     *     * @param tList ターゲットのリスト     * @return 一番近いターゲット     */    private double fitnessFunction(ArrayList<Enemy> tList) {        double d = Double.MAX_VALUE;        for (Enemy t : tList) {            if (t.p.distance(x, y) < d)                d = t.p.distance(x, y);        }        return d;    }    @Override    public String toString(){        //TODO fitnessValueの追加        return x+","+y+"/";    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        Intelligence that = (Intelligence) o;        if (Double.compare(that.x, x) != 0) return false;        if (Double.compare(that.y, y) != 0) return false;        return Double.compare(that.fitnessValue, fitnessValue) == 0;    }    @Override    public int hashCode() {        int result;        long temp;        temp = Double.doubleToLongBits(x);        result = (int) (temp ^ (temp >>> 32));        temp = Double.doubleToLongBits(y);        result = 31 * result + (int) (temp ^ (temp >>> 32));        temp = Double.doubleToLongBits(fitnessValue);        result = 31 * result + (int) (temp ^ (temp >>> 32));        return result;    }}