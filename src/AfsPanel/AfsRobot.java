package AfsPanel;import PsoPanel.PsoSimulation;import SuperPack.Panel.Intelligence;import SuperPack.Panel.Point2;import SuperPack.Panel.Robot;import SuperPack.Panel.SimulationPanel;import java.awt.*;/** * Created by Ishiwatari on 2016/11/24. */public class AfsRobot extends Robot {    Intelligence oldIntelligence;    final static double A = 0.1;    final static double B = 0.1;    final static double C = 0.1;    protected AfsRobot(SimulationPanel s) {        super(s);        oldIntelligence = new Intelligence(p.x, p.y, s.targetList);    }    protected AfsRobot(Point2 point, SimulationPanel s) {        super(point, s);        //TODO oldInteligenceの初期化    }    protected AfsRobot(SimulationPanel s, String robotString) {        super(s, robotString);        //TODO oldInteligenceの初期化    }    @Override    public void copy(Robot robot) {        super.copy(robot);        //TODO oldInteligenceの初期化    }    @Override    public void reset() {        super.reset();    }    @Override    public void move() {        //gの合計値の計算        sigma        for (Robot r : field.robot) {            if (r != this) {                field.communication_num++;            }        }    }    private Point2 AttractionRepulsionFunc(Point2 pj) {        double g = A - B * Math.exp(-1 * -1 * p.distance(pj) / C);        double x = -1 * (p.x - pj.x) * g;        double y = -1 * (p.y - pj.y) * g;        return new Point2(x, y);    }    @Override    protected Point getSwingPoint() {        return (new Point((int) (p.x * PsoSimulation.length / PsoSimulation.size + PsoSimulation.startX),                (int) ((PsoSimulation.size - p.y) * PsoSimulation.length / PsoSimulation.size + PsoSimulation.startY)));    }    /**     * CIの設定     */    @Override    public void setCI() {        //今回は使わない    }}