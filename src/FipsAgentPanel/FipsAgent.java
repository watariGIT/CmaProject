package FipsAgentPanel;import AgentPanel.Agent;import AgentPanel.AgentRobot2;import AgentPanel.MultiAgentSimulation2;import SuperPack.Intelligence;import java.awt.*;import java.util.HashMap;/** * Created by Ishiwatari on 2016/08/12. */public class FipsAgent extends Agent {    private HashMap<Integer, Intelligence> intelligenceHashMap; //keyロボットのID Value:そこから得た座標    FipsAgent(AgentRobot2 ag) {        super(ag);        intelligenceHashMap.put(ag.id, ag.PI);    }    FipsAgent(AgentRobot2 ag, Color col) {        super(ag, col);        intelligenceHashMap.put(ag.id, ag.PI);    }    /**     * エージェント情報文字列からエージェントを精製。     * この時セットされるロボットは仮のロボット（後から同じ情報をもつロボットをセットする）     *     * @param s     * @param agentString 　エージェント情報文字列     */    FipsAgent(MultiAgentSimulation2 s, String agentString) {        //TODO あとで        super(s, agentString);    }    /**     * ターゲットを捕獲した際に行う処理     */    @Override    protected void captured() {        intelligenceHashMap = new HashMap<>();        intelligenceHashMap.put(arobot.id, arobot.PI);    }    /**     * AgentのAI：ROBOTのCIを更新するメソッド     */    @Override    protected void updateAI() {        //エージェントの情報の更新        if (intelligenceHashMap.containsKey(arobot.id)) {            //すでに登録済みなら            Intelligence i = intelligenceHashMap.get(arobot.id);            if (i.getFitnessValue() > arobot.PI.getFitnessValue()) {                intelligenceHashMap.put(arobot.id, arobot.PI);            }        } else {            //登録していないなら            intelligenceHashMap.put(arobot.id, arobot.PI);        }        //TODO ロボットの情報の更新    }}